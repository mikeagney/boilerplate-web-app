swagger: "2.0"
info:
  description: "Sample server for a boilerplate Node app."
  version: "0.0.0"
  title: "Boilerplate Web App"
  contact:
    email: "magney@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "boilerplate-web-app.tharkun.org"
basePath: "/api/v0"
tags:
  - name: "characters"
    description: "Everything about a character"
schemes:
  - "https"
  - "http"
paths:
  /characters:
    get:
      tags:
        - "characters"
      summary: "Get the character IDs"
      description: ""
      operationId: "getCharacterIds"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
            xml:
              name: "CharacterIds"
    post:
      tags:
        - "characters"
      summary: "Add a new character"
      description: ""
      operationId: "addCharacter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Character object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Character"
      responses:
        405:
          description: "Invalid input"
  /characters/{characterId}:
    get:
      tags:
        - "characters"
      summary: "Find character by ID"
      description: "Returns a single character"
      operationId: "getCharacterById"
      produces:
        - "application/json"
      parameters:
        - name: "characterId"
          in: "path"
          description: "ID of character to return"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Character"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Character not found"
    put:
      tags:
        - "characters"
      summary: "Update an existing character"
      description: ""
      operationId: "updateCharacter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "characterId"
          in: "path"
          description: "ID of character to update"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Character object that needs to be updated"
          required: true
          schema:
            $ref: "#/definitions/Character"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Character not found"
        405:
          description: "Validation exception"
    delete:
      tags:
        - "characters"
      summary: "Deletes a character"
      description: ""
      operationId: "deleteCharacter"
      produces:
        - "application/json"
      parameters:
        - name: "characterId"
          in: "path"
          description: "Character id to delete"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Character not found"
definitions:
  Character:
    type: "object"
    properties:
      characterId:
        type: "string"
        xml:
          name: "CharacterId"
      name:
        type: "string"
        xml:
          name: "Name"
    xml:
      name: "Characters"
